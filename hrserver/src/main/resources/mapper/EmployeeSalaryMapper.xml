<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.ncvt.mapper.EmployeeSalaryMapper" >
  <resultMap id="BaseResultMap" type="com.cn.ncvt.entity.EmployeeSalary" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="baseSalary" property="baseSalary" jdbcType="FLOAT" />
    <result column="meritSalary" property="meritSalary" jdbcType="FLOAT" />
    <association property="employee" javaType="Employee">
      <id column="workId" property="workId"/>
      <result column="departmentName" property="departmentName"/>
      <result column="positionName" property="positionName"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, eid, baseSalary, meritSalary
  </sql>
  <select id="selectAllEmployeeSalary" parameterType="string" resultMap="BaseResultMap" >
    SELECT es.*,e.name,e.workId,d.name departmentName,p.name positionName
    from employee_salary es,employee e,department d,position p
    where es.eid=e.id and e.departmentId=d.id and e.positionId=p.id
    <if test="name != null and name != '' " >
      and e.name like '%${name}%'
    </if>
    <if test="departmentId != null and departmentId != '' " >
      and e.departmentId=#{departmentId}
    </if>
    <if test="positionId != null and positionId != '' " >
      and e.positionId=#{positionId}
    </if>
    <if test="jobLevelId != null and jobLevelId != '' " >
      and e.jobLevelId=#{jobLevelId}
    </if>
  </select>
  <select id="selectByID" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_salary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByID" parameterType="java.lang.Integer" >
    delete from employee_salary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.ncvt.entity.EmployeeSalary" >
    insert into employee_salary (id, eid, baseSalary, 
      meritSalary)
    values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{basesalary,jdbcType=DOUBLE},
      #{meritsalary,jdbcType=DOUBLE})
  </insert>
  <update id="updateByIDSelective" parameterType="com.cn.ncvt.entity.EmployeeSalary" >
    update employee_salary
    <set >
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="basesalary != null" >
        baseSalary = #{basesalary,jdbcType=DOUBLE},
      </if>
      <if test="meritsalary != null" >
        meritSalary = #{meritsalary,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByID" parameterType="com.cn.ncvt.entity.EmployeeSalary" >
    update employee_salary
    set eid = #{eid,jdbcType=INTEGER},
      baseSalary = #{basesalary,jdbcType=DOUBLE},
      meritSalary = #{meritsalary,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>